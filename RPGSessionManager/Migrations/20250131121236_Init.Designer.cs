// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RPGSessionManager.Data;

#nullable disable

namespace RPGSessionManager.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250131121236_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("RPGSessionManager.Models.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("About")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasEnded")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Campaigns");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "Mega fajna kampania",
                            HasEnded = false,
                            Title = "W mroku"
                        });
                });

            modelBuilder.Entity("RPGSessionManager.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("TeamId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Character 1",
                            LastName = "One",
                            PlayerId = 1,
                            Profession = "Warrior",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Character 2",
                            LastName = "Two",
                            PlayerId = 2,
                            Profession = "Mage",
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("RPGSessionManager.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Krzysztof"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adam"
                        });
                });

            modelBuilder.Entity("RPGSessionManager.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("About")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int?>("CampaignId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("TeamId");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "Lecimy na grubo albo wcale",
                            CampaignId = 1,
                            Date = new DateOnly(2025, 1, 30),
                            TeamId = 1,
                            Title = "Lecimy na grubo"
                        });
                });

            modelBuilder.Entity("RPGSessionManager.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("About")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("HomeCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "A very cool team",
                            HomeCity = "Kraków",
                            Name = "Team 1"
                        });
                });

            modelBuilder.Entity("RPGSessionManager.Models.Character", b =>
                {
                    b.HasOne("RPGSessionManager.Models.Player", "Player")
                        .WithMany("Characters")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPGSessionManager.Models.Team", "Team")
                        .WithMany("Characters")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("RPGSessionManager.Models.Session", b =>
                {
                    b.HasOne("RPGSessionManager.Models.Campaign", "Campaign")
                        .WithMany("Sessions")
                        .HasForeignKey("CampaignId");

                    b.HasOne("RPGSessionManager.Models.Team", "Team")
                        .WithMany("Sessions")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("RPGSessionManager.Models.Campaign", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("RPGSessionManager.Models.Player", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("RPGSessionManager.Models.Team", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
